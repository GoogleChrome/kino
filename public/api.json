[
  {
    "id": "background-fetch",
    "title": "Background Fetch",
    "description": "Background Fetch. This is a chunked DASH video that should adapt to available bandwidth changes.",
    "categories": [
      "HTTP 203"
    ],
    "date": "4th March, 2017",
    "length": "7:43",
    "video-sources": [
      {
        "src": "https://storage.googleapis.com/wdm-assets/videos/http-203/background-fetch/manifest.mpd",
        "type": "application/dash+xml"
      },
      {
        "src": "https://storage.googleapis.com/wdm-assets/videos/http-203/background-fetch/master.m3u8",
        "type": "application/x-mpegURL"
      }
    ],
    "thumbnail": [
      {
        "src": "https://storage.googleapis.com/wdm-assets/images/http-203/http-203-background-fetch.avif",
        "type": "image/avif"
      },
      {
        "src": "https://storage.googleapis.com/wdm-assets/images/http-203/http-203-background-fetch.webp",
        "type": "image/webp"
      },
      {
        "src": "https://storage.googleapis.com/wdm-assets/images/http-203/http-203-background-fetch.jpg",
        "type": "image/jpg",
        "default": true
      }
    ],
    "video-subtitles": [
      {
        "default": true,
        "kind": "subtitles",
        "label": "English",
        "src": "https://storage.googleapis.com/wdm-assets/subtitles/http-203/http-203-background-fetch.vtt",
        "srclang": "en"
      }
    ]
  },
  {
    "id": "javascript-for-loops-are-complicated",
    "title": "JavaScript for-loops are… complicated",
    "description": "In this episode, Jake and Surma dissect how for-loops actually work and how they’ve evolved. Turns out, it got complicated.",
    "categories": [
      "HTTP 203"
    ],
    "date": "4th March, 2017",
    "length": "7:43",
    "video-sources": [
      {
        "src": "https://storage.googleapis.com/wdm-assets/videos/http-203/http-203-for-loops.mp4",
        "type": "video/mp4; codecs=\"avc1.64001f,mp4a.40.2\""
      }
    ],
    "video-subtitles": [
      {
        "default": true,
        "kind": "subtitles",
        "label": "English",
        "src": "https://storage.googleapis.com/wdm-assets/subtitles/ForBiggerEscapes-en.vtt",
        "srclang": "en"
      },
      {
        "default": true,
        "kind": "subtitles",
        "label": "Czech",
        "src": "https://storage.googleapis.com/wdm-assets/subtitles/ForBiggerEscapes-cz.vtt",
        "srclang": "cz"
      }
    ],
    "thumbnail": "https://storage.googleapis.com/wdm-assets/images/http-203/http-203-for-loops.jpg"
  },
  {
    "id": "old-vs-new-javascript",
    "title": "Old vs New JavaScript",
    "description": "Jake and Surma look at the modern JS & web features we take for granted.",
    "categories": [
      "HTTP 203"
    ],
    "date": "4th March, 2017",
    "length": "7:43",
    "video-sources": [
      {
        "src": "https://storage.googleapis.com/wdm-assets/videos/http-203/http-203-old-vs-new-js.mp4",
        "type": "video/mp4; codecs=\"avc1.64001f,mp4a.40.2\""
      }
    ],
    "thumbnail": "https://storage.googleapis.com/wdm-assets/images/http-203/http-203-old-vs-new-js.jpg"
  },
  {
    "id": "conditional-polyfills",
    "title": "Polyfills",
    "description": "In this episode, Surma & Jake talks about the conditional loading of polyfills and how to implement it in the world of ES2015 modules. The non-blocking nature of modules makes the old approach of blocking script tags both inefficient and undesirable and with dynamic import landing, the web now offers better ways.",
    "categories": [
      "HTTP 203"
    ],
    "date": "4th March, 2017",
    "length": "7:43",
    "video-sources": [
      {
        "src": "https://storage.googleapis.com/wdm-assets/videos/http-203/http-203-polyfills.mp4",
        "type": "video/mp4; codecs=\"avc1.64001f,mp4a.40.2\""
      }
    ],
    "thumbnail": "https://storage.googleapis.com/wdm-assets/images/http-203/http-203-polyfills.jpg"
  },
  {
    "id": "gui-centering",
    "title": "Thinking on ways to solve CENTERING",
    "description": "In today’s challenge, we’re stress testing 5 different CSS centering techniques. See what techniques should earn a place in your tool belt by watching how they react to common layout stress. The contestants: content center, gentle flex, autobot, fluffy center, and pop & plop.",
    "categories": [
      "GUI Challenges"
    ],
    "date": "4th March, 2017",
    "length": "7:43",
    "video-sources": [
      {
        "src": "https://storage.googleapis.com/wdm-assets/videos/gui-challenges/centering.mp4",
        "type": "video/mp4; codecs=\"avc1.64001f,mp4a.40.2\""
      }
    ],
    "thumbnail": "https://storage.googleapis.com/wdm-assets/images/gui-challenges/centering.jpg"
  },
  {
    "id": "gui-sidenav",
    "title": "Thinking on ways to solve a SIDENAV",
    "description": "In today’s GUI challenge we create a responsive, accessible slide out side navigation user experience using CSS and JS. The sidenav works on multiple browsers, screen sizes and input devices. Rad right? Follow as we employ grid, transforms, pseudo classes and a dollop of JavaScript to handle this UX.",
    "categories": [
      "GUI Challenges"
    ],
    "date": "4th March, 2017",
    "length": "7:43",
    "video-sources": [
      {
        "src": "https://storage.googleapis.com/wdm-assets/videos/gui-challenges/sidenav.mp4",
        "type": "video/mp4; codecs=\"avc1.64001f,mp4a.40.2\""
      }
    ],
    "thumbnail": "https://storage.googleapis.com/wdm-assets/images/gui-challenges/sidenav.jpg"
  },
  {
    "id": "gui-tabs",
    "title": "Thinking on ways to solve TABS",
    "description": "In today’s GUI challenge, we’re building a tabs component with some really cool features that you may not have thought about. Our tabs component is responsive, supports multiple device inputs, works across browsers, and let’s you mimic some of the buttery features you love on apps.",
    "categories": [
      "GUI Challenges"
    ],
    "date": "4th March, 2017",
    "length": "7:43",
    "video-sources": [
      {
        "src": "https://storage.googleapis.com/wdm-assets/videos/gui-challenges/tabs.mp4",
        "type": "video/mp4; codecs=\"avc1.64001f,mp4a.40.2\""
      }
    ],
    "thumbnail": "https://storage.googleapis.com/wdm-assets/images/gui-challenges/tabs.jpg"
  },
  {
    "id": "pwa-intro-and-setup",
    "title": "Intro & Setup",
    "description": "Welcome to the Progressive Web Apps Training course! This video provides a short introduction to the course, giving an overview of what topics and API’s are covered.\nThe format of this course is simple: we show you something, you build stuff, and repeat!",
    "categories": [
      "Progressive Web Apps"
    ],
    "date": "4th March, 2017",
    "length": "7:43",
    "video-sources": [
      {
        "src": "https://storage.googleapis.com/wdm-assets/videos/pwa/pwa-intro.mp4",
        "type": "video/mp4; codecs=\"avc1.64001f,mp4a.40.2\""
      }
    ],
    "thumbnail": "https://storage.googleapis.com/wdm-assets/images/pwa/pwa-intro.jpg"
  },
  {
    "id": "pwa-when-to-use-one",
    "title": "When should you use a PWA?",
    "description": "The hardest problem with software is distribution. App developers often spend more on distribution than they earn back. This problem is solved by the web platform, however web apps have historically been less capable than native apps. With the advent of PWAs, web apps have become just as capable as native, supporting features such as push notifications and Add to Home Screen, without giving up the reach of the web.",
    "categories": [
      "Progressive Web Apps"
    ],
    "date": "4th March, 2017",
    "length": "7:43",
    "video-sources": [
      {
        "src": "https://storage.googleapis.com/wdm-assets/videos/pwa/pwa-when.mp4",
        "type": "video/mp4; codecs=\"avc1.64001f,mp4a.40.2\""
      }
    ],
    "thumbnail": "https://storage.googleapis.com/wdm-assets/images/pwa/pwa-when.jpg"
  }
]
